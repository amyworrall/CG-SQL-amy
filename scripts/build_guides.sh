#!/bin/bash

set -o errexit -o nounset -o pipefail

readonly CLI_NAME=${0##*/}
readonly SCRIPT_DIR_RELATIVE=$(dirname "$0")
readonly SCRIPT_OUT_DIR=$SCRIPT_DIR_RELATIVE/../.generated

debug() {
    echo $@ >&2
}

build_guide() {
    local guide_type=$1
    local guide_name=$2

    debug -e "Building $guide_type\n"


    # Clean up previous build outputs

    mkdir -p "$SCRIPT_OUT_DIR"
    rm -f "$SCRIPT_OUT_DIR/$guide_type.*"


    # Build Intermediate Markdown output

    shift 2
    local sources=$@
    local target="$SCRIPT_OUT_DIR/$guide_type.md"
    echo "<!--- @generated by $CLI_NAME -->\n" > $target

    for source in $sources; do
        cat "$source" >> "$target"
        echo -e "\n\n" >> "$target"
    done

    debug "$target was successfully created" >&2


    # Build Final HTML output

    local source="$SCRIPT_OUT_DIR/$guide_type.md"
    local target="$SCRIPT_OUT_DIR/$guide_type.html"

    pandoc $source \
        --metadata title="$guide_name" \
        --toc \
        --standalone \
        --wrap=none \
        --from markdown \
        --to html \
        --output $target

    echo -e "<!--- @generated by $CLI_NAME -->\n$(cat $target)" > $target

    debug "$target was successfully created"
    debug ""

    rm $source
}

build_guide "user_guide" "CQL User's Guide" $SCRIPT_DIR_RELATIVE/../docs/user_guide/*.md $SCRIPT_DIR_RELATIVE/../docs/user_guide/**/*.md
build_guide "developer_guide" "CQL Developer's Guide" $SCRIPT_DIR_RELATIVE/../docs/developer_guide/*.md
